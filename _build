#!/usr/bin/env ruby
# encoding: utf-8

# A script for programmatically generating pages

PSR_DIR  = File.join(File.dirname(__FILE__), '_includes', 'standards', 'accepted')

raise 'Run "git submodule init"' unless File.directory?(PSR_DIR)

Dir["#{PSR_DIR}/*.md"].sort.each do |original|
  # Skip non-PSR files?
  next unless File.basename(original) =~ /^(P..-\d+)\b/

  name   = $1.downcase
  title = File.read(original).split(/[\n\r]/).first.sub(/^#\s*/, '')

  pages = [
    {
      :name  => 'English',
      :path  => "/#{name}",
      :title => "#{name} â€” #{title}",
      :disc  => false,
      :inc   => original.sub(%r{.*/standards/}, 'standards/'),
    }
  ]

  pages.each do |page|
    links = []
    pages.each do |other|
      links << " - name: #{other[:name]}"
      links << "   path: #{other[:path]}" unless other[:path] == page[:path]
    end

    File.open(".#{page[:path]}/index.md", 'w') do |f|
      f << <<-EOS.gsub(/^ {8}/, '')
        ---
        # This file is automatically generated by `_build`.
        layout:     psr
        title:      #{page[:title]}
        ---
        {% include #{page[:inc]} %}
      EOS
    end
  end
end
